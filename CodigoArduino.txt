void setup() {
  Serial.begin(115200);
  Serial1.begin(115200);
  Serial1.println("USB Serial conectado");
}

void loop() {
  if (Serial.available()) {
    String receivedString = Serial.readStringUntil('\n');

    //Llamo a las funciones
    //processMessageVelocity(receivedString);
    //processMessageCoordinates(receivedString);
    processMessageSimpleCoordinates(receivedString);

  }
}

/*Funcion para conocer las velocidades, dado que la aplicacion manda
  un mensaje con: c120,120*/
void processMessageVelocity(String msg) {
  if (msg.startsWith("c")) {
    msg.remove(0, 1);  // Eliminar el carácter 'c'
    int commaIndex = msg.indexOf(',');
    if (commaIndex != -1) {
      int left = msg.substring(0, commaIndex).toInt();
      int right = msg.substring(commaIndex + 1).toInt();
      // Procesa los valores de left y right
      Serial1.print("Left: ");
      Serial1.print(left);
      Serial1.print(", Right: ");
      Serial1.println(right);
    }
  }
}

/*Funcion para conocer las coordenadas, dado que la aplicacion manda
  un mensaje con: 123.04,243.42*/
void processMessageCoordinates(String msg) {
    // Eliminar espacios y comillas
    msg.trim();

    // Buscar la posición de "X:" y "Y:"
    int xIndex = msg.indexOf("X:");
    int yIndex = msg.indexOf("Y:");

    if (xIndex != -1 && yIndex != -1) {  // Verifica que ambas coordenadas existen
        // Extraer el valor de X
        int startX = xIndex + 2; // El índice donde comienza el valor de X
        int endX = msg.indexOf(',', startX); // Encuentra la coma después de X

        // Si no se encuentra la coma, ajustamos endX al final del mensaje
        if (endX == -1) {
            endX = msg.length(); // Asignamos endX al final de la cadena
        }

        String xValue = msg.substring(startX, endX); // Extrae el valor de X
        xValue.trim(); // Limpia el valor de X

        // Extraer el valor de Y
        int startY = yIndex + 2; // El índice donde comienza el valor de Y
        String yValue;

        // Verificar si hay una coma después de X
        if (endX < msg.length()) {
            yValue = msg.substring(endX + 1); // Extrae el valor después de la coma
            yValue.trim(); // Limpia el valor de Y
        } else {
            yValue = msg.substring(startY); // Si no hay coma, extrae el valor hasta el final
            yValue.trim(); // Limpia el valor de Y
        }

        // Convertir a enteros
        int x = xValue.toInt(); // Convertir a entero
        int y = yValue.toInt(); // Convertir a entero

        // Procesar los valores de X e Y
        Serial1.print("X: ");
        Serial1.print(x);
        Serial1.print(", Y: ");
        Serial1.println(y);
    } else {
        Serial1.println("Formato incorrecto.");  // Mensaje si el formato no es válido
    }
}

/* Función para procesar coordenadas con el formato "100,240" */
void processMessageSimpleCoordinates(String msg) {
    msg.trim();  // Eliminar espacios

    int commaIndex = msg.indexOf(',');
    if (commaIndex != -1) {
        String xValue = msg.substring(0, commaIndex);
        String yValue = msg.substring(commaIndex + 1);

        xValue.trim();
        yValue.trim();

        if (xValue.length() > 0 && yValue.length() > 0) {
            int x = xValue.toInt();
            int y = yValue.toInt();

            Serial1.print("Formato Simple -> X: ");
            Serial1.print(x);
            Serial1.print(", Y: ");
            Serial1.println(y);
        }
    } else {
          Serial1.println("Formato incorrecto");
    }
}
	