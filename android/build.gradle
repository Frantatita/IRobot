buildscript {
    ext.kotlin_version = '1.8.0'
    ext.webrtc_version = '1.0.32006'
    ext.location_version = '21.0.1'
    ext.nearby_version = '20.0.2'

    repositories {
        google()
        mavenCentral()
        mavenLocal()
        jcenter()   //Linea agregada
        maven { url "https://jitpack.io" }      //Linea
        maven {url("$rootDir/..")}      //Linea agregada
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.7.2'
        classpath 'com.google.gms:google-services:4.4.2'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:3.0.2'
        classpath 'de.undercouch:gradle-download-task:4.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"


        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url "https://www.jitpack.io" }
        maven {url("$rootDir/..")}   //Linea agregada
        gradlePluginPortal()
    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}

tasks.register('checkStyle', JavaExec) {
    workingDir = "utils"
    classpath = files("utils/google-java-format-1.7-all-deps.jar")
    FileTree tree = fileTree('app/src/main/java') {
        include '**/*.java'
    }
    args(["-n", "--set-exit-if-changed"]) // -n prints filename if using wrong style
    tree.each { args += it }
    //color codes: "\u001B[33m" - yellow, "\u001B[32m" - green, "\u001B[0m" - reset (Unix)
    doFirst {
        println("You can fix the style of the files below (if any) with "
                + "\u001B[33m" + "./gradlew applyStyle" + "\u001B[0m")
    }
    doLast { // will only execute on success (exitcode=0)
        println("\u001B[32m" + " -> All java files follow the correct style." + "\u001B[0m")
    }
}

tasks.register('checkStyleUnix', Exec) {
    workingDir 'utils'
    commandLine './checkStyle.sh'
}

tasks.register('applyStyle', JavaExec) {
    workingDir = "utils"
    classpath = files("utils/google-java-format-1.7-all-deps.jar")
    FileTree tree = fileTree('app/src/main/java') {
        include '**/*.java'
    }
    args("-r") // replace cmd, means write changes back to source file
    tree.each { args += it }
}

tasks.register('applyStyleUnix', Exec) {
    workingDir 'utils'
    commandLine './applyStyle.sh'
}
